{"ast":null,"code":"import React,{useState}from'react';import SearchBar from'./SearchBar';import Filters from'./Filters';import Table from'./Table';import'../Styling/LeaderBoard.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Leaderboard=()=>{const[searchQuery,setSearchQuery]=useState('');const[filterRegion,setFilterRegion]=useState('');const[sortColumn,setSortColumn]=useState('latency');const[sortOrder,setSortOrder]=useState('asc');// 'asc' for ascending, 'desc' for descending\n// Placeholder data\nconst ispData=[{name:'ISP A',latency:50,downloadSpeed:100,uploadSpeed:50,packetLoss:0.1,region:'Kenya'},{name:'ISP B',latency:30,downloadSpeed:150,uploadSpeed:75,packetLoss:0.05,region:'South Africa'}// More data here...\n];const handleSearch=query=>setSearchQuery(query);const handleFilter=region=>setFilterRegion(region);const handleSort=column=>{const newSortOrder=sortColumn===column&&sortOrder==='asc'?'desc':'asc';setSortColumn(column);setSortOrder(newSortOrder);};// Filter, search, and sort data logic\nconst filteredData=ispData.filter(isp=>isp.name.toLowerCase().includes(searchQuery.toLowerCase())&&(!filterRegion||isp.region===filterRegion)).sort((a,b)=>{const valueA=a[sortColumn];const valueB=b[sortColumn];return sortOrder==='asc'?valueA-valueB:valueB-valueA;});return/*#__PURE__*/_jsxs(\"div\",{className:\"leaderboard-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"ISP Leaderboard\"}),/*#__PURE__*/_jsx(SearchBar,{onSearch:handleSearch}),/*#__PURE__*/_jsx(Filters,{onFilter:handleFilter}),/*#__PURE__*/_jsx(Table,{data:filteredData,onSort:handleSort,sortColumn:sortColumn,sortOrder:sortOrder})]});};export default Leaderboard;","map":{"version":3,"names":["React","useState","SearchBar","Filters","Table","jsx","_jsx","jsxs","_jsxs","Leaderboard","searchQuery","setSearchQuery","filterRegion","setFilterRegion","sortColumn","setSortColumn","sortOrder","setSortOrder","ispData","name","latency","downloadSpeed","uploadSpeed","packetLoss","region","handleSearch","query","handleFilter","handleSort","column","newSortOrder","filteredData","filter","isp","toLowerCase","includes","sort","a","b","valueA","valueB","className","children","onSearch","onFilter","data","onSort"],"sources":["C:/Users/fabri/Envs/npip/network_platform_react/src/Components/ISPLeaderboard.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport SearchBar from './SearchBar';\r\nimport Filters from './Filters';\r\nimport Table from './Table';\r\nimport '../Styling/LeaderBoard.css';\r\n\r\nconst Leaderboard = () => {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [filterRegion, setFilterRegion] = useState('');\r\n  const [sortColumn, setSortColumn] = useState('latency');\r\n  const [sortOrder, setSortOrder] = useState('asc'); // 'asc' for ascending, 'desc' for descending\r\n\r\n  // Placeholder data\r\n  const ispData = [\r\n    { name: 'ISP A', latency: 50, downloadSpeed: 100, uploadSpeed: 50, packetLoss: 0.1, region: 'Kenya' },\r\n    { name: 'ISP B', latency: 30, downloadSpeed: 150, uploadSpeed: 75, packetLoss: 0.05, region: 'South Africa' },\r\n    // More data here...\r\n  ];\r\n\r\n  const handleSearch = (query) => setSearchQuery(query);\r\n  const handleFilter = (region) => setFilterRegion(region);\r\n  const handleSort = (column) => {\r\n    const newSortOrder = sortColumn === column && sortOrder === 'asc' ? 'desc' : 'asc';\r\n    setSortColumn(column);\r\n    setSortOrder(newSortOrder);\r\n  };\r\n\r\n  // Filter, search, and sort data logic\r\n  const filteredData = ispData\r\n    .filter(isp => isp.name.toLowerCase().includes(searchQuery.toLowerCase()) && (!filterRegion || isp.region === filterRegion))\r\n    .sort((a, b) => {\r\n      const valueA = a[sortColumn];\r\n      const valueB = b[sortColumn];\r\n      return sortOrder === 'asc' ? valueA - valueB : valueB - valueA;\r\n    });\r\n\r\n  return (\r\n    <div className=\"leaderboard-container\">\r\n      <h1>ISP Leaderboard</h1>\r\n      <SearchBar onSearch={handleSearch} />\r\n      <Filters onFilter={handleFilter} />\r\n      <Table data={filteredData} onSort={handleSort} sortColumn={sortColumn} sortOrder={sortOrder} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Leaderboard;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,SAAS,KAAM,aAAa,CACnC,MAAO,CAAAC,OAAO,KAAM,WAAW,CAC/B,MAAO,CAAAC,KAAK,KAAM,SAAS,CAC3B,MAAO,4BAA4B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEpC,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACW,YAAY,CAAEC,eAAe,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CACpD,KAAM,CAACa,UAAU,CAAEC,aAAa,CAAC,CAAGd,QAAQ,CAAC,SAAS,CAAC,CACvD,KAAM,CAACe,SAAS,CAAEC,YAAY,CAAC,CAAGhB,QAAQ,CAAC,KAAK,CAAC,CAAE;AAEnD;AACA,KAAM,CAAAiB,OAAO,CAAG,CACd,CAAEC,IAAI,CAAE,OAAO,CAAEC,OAAO,CAAE,EAAE,CAAEC,aAAa,CAAE,GAAG,CAAEC,WAAW,CAAE,EAAE,CAAEC,UAAU,CAAE,GAAG,CAAEC,MAAM,CAAE,OAAQ,CAAC,CACrG,CAAEL,IAAI,CAAE,OAAO,CAAEC,OAAO,CAAE,EAAE,CAAEC,aAAa,CAAE,GAAG,CAAEC,WAAW,CAAE,EAAE,CAAEC,UAAU,CAAE,IAAI,CAAEC,MAAM,CAAE,cAAe,CAC5G;AAAA,CACD,CAED,KAAM,CAAAC,YAAY,CAAIC,KAAK,EAAKf,cAAc,CAACe,KAAK,CAAC,CACrD,KAAM,CAAAC,YAAY,CAAIH,MAAM,EAAKX,eAAe,CAACW,MAAM,CAAC,CACxD,KAAM,CAAAI,UAAU,CAAIC,MAAM,EAAK,CAC7B,KAAM,CAAAC,YAAY,CAAGhB,UAAU,GAAKe,MAAM,EAAIb,SAAS,GAAK,KAAK,CAAG,MAAM,CAAG,KAAK,CAClFD,aAAa,CAACc,MAAM,CAAC,CACrBZ,YAAY,CAACa,YAAY,CAAC,CAC5B,CAAC,CAED;AACA,KAAM,CAAAC,YAAY,CAAGb,OAAO,CACzBc,MAAM,CAACC,GAAG,EAAIA,GAAG,CAACd,IAAI,CAACe,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACzB,WAAW,CAACwB,WAAW,CAAC,CAAC,CAAC,GAAK,CAACtB,YAAY,EAAIqB,GAAG,CAACT,MAAM,GAAKZ,YAAY,CAAC,CAAC,CAC3HwB,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAK,CACd,KAAM,CAAAC,MAAM,CAAGF,CAAC,CAACvB,UAAU,CAAC,CAC5B,KAAM,CAAA0B,MAAM,CAAGF,CAAC,CAACxB,UAAU,CAAC,CAC5B,MAAO,CAAAE,SAAS,GAAK,KAAK,CAAGuB,MAAM,CAAGC,MAAM,CAAGA,MAAM,CAAGD,MAAM,CAChE,CAAC,CAAC,CAEJ,mBACE/B,KAAA,QAAKiC,SAAS,CAAC,uBAAuB,CAAAC,QAAA,eACpCpC,IAAA,OAAAoC,QAAA,CAAI,iBAAe,CAAI,CAAC,cACxBpC,IAAA,CAACJ,SAAS,EAACyC,QAAQ,CAAElB,YAAa,CAAE,CAAC,cACrCnB,IAAA,CAACH,OAAO,EAACyC,QAAQ,CAAEjB,YAAa,CAAE,CAAC,cACnCrB,IAAA,CAACF,KAAK,EAACyC,IAAI,CAAEd,YAAa,CAACe,MAAM,CAAElB,UAAW,CAACd,UAAU,CAAEA,UAAW,CAACE,SAAS,CAAEA,SAAU,CAAE,CAAC,EAC5F,CAAC,CAEV,CAAC,CAED,cAAe,CAAAP,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}