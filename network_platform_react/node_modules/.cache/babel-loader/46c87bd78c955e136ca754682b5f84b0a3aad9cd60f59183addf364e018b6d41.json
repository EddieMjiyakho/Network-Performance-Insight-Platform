{"ast":null,"code":"import React,{useEffect,useState}from'react';import'../Styling/MetricCard.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MetricCard=_ref=>{let{title,value,previousValue}=_ref;const[animateValue,setAnimateValue]=useState(0);// Trigger number animation when the card loads\nuseEffect(()=>{let start=0;const duration=1000;// 1 second for the animation\nconst increment=value/(duration/10);const interval=setInterval(()=>{start+=increment;if(start>=value){setAnimateValue(value);clearInterval(interval);}else{setAnimateValue(Math.floor(start));}},10);return()=>clearInterval(interval);},[value]);// Check if the value has increased or decreased\nconst isIncreased=value>previousValue;return/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:title}),/*#__PURE__*/_jsxs(\"p\",{className:\"value\",children:[animateValue,\" Mbps\",/*#__PURE__*/_jsx(\"span\",{className:`arrow ${isIncreased?'up':'down'}`,children:isIncreased?'↑':'↓'})]})]});};export default MetricCard;","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","jsxs","_jsxs","MetricCard","_ref","title","value","previousValue","animateValue","setAnimateValue","start","duration","increment","interval","setInterval","clearInterval","Math","floor","isIncreased","className","children"],"sources":["C:/Users/fabri/Envs/npip/network_platform_react/src/Components/MetricCard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../Styling/MetricCard.css';\r\n\r\nconst MetricCard = ({ title, value, previousValue }) => {\r\n  const [animateValue, setAnimateValue] = useState(0);\r\n\r\n  // Trigger number animation when the card loads\r\n  useEffect(() => {\r\n    let start = 0;\r\n    const duration = 1000; // 1 second for the animation\r\n    const increment = value / (duration / 10);\r\n\r\n    const interval = setInterval(() => {\r\n      start += increment;\r\n      if (start >= value) {\r\n        setAnimateValue(value);\r\n        clearInterval(interval);\r\n      } else {\r\n        setAnimateValue(Math.floor(start));\r\n      }\r\n    }, 10);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [value]);\r\n\r\n  // Check if the value has increased or decreased\r\n  const isIncreased = value > previousValue;\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <h3>{title}</h3>\r\n      <p className=\"value\">\r\n        {animateValue} Mbps\r\n        <span className={`arrow ${isIncreased ? 'up' : 'down'}`}>\r\n          {isIncreased ? '↑' : '↓'}\r\n        </span>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MetricCard;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,2BAA2B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnC,KAAM,CAAAC,UAAU,CAAGC,IAAA,EAAqC,IAApC,CAAEC,KAAK,CAAEC,KAAK,CAAEC,aAAc,CAAC,CAAAH,IAAA,CACjD,KAAM,CAACI,YAAY,CAAEC,eAAe,CAAC,CAAGX,QAAQ,CAAC,CAAC,CAAC,CAEnD;AACAD,SAAS,CAAC,IAAM,CACd,GAAI,CAAAa,KAAK,CAAG,CAAC,CACb,KAAM,CAAAC,QAAQ,CAAG,IAAI,CAAE;AACvB,KAAM,CAAAC,SAAS,CAAGN,KAAK,EAAIK,QAAQ,CAAG,EAAE,CAAC,CAEzC,KAAM,CAAAE,QAAQ,CAAGC,WAAW,CAAC,IAAM,CACjCJ,KAAK,EAAIE,SAAS,CAClB,GAAIF,KAAK,EAAIJ,KAAK,CAAE,CAClBG,eAAe,CAACH,KAAK,CAAC,CACtBS,aAAa,CAACF,QAAQ,CAAC,CACzB,CAAC,IAAM,CACLJ,eAAe,CAACO,IAAI,CAACC,KAAK,CAACP,KAAK,CAAC,CAAC,CACpC,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,IAAMK,aAAa,CAACF,QAAQ,CAAC,CACtC,CAAC,CAAE,CAACP,KAAK,CAAC,CAAC,CAEX;AACA,KAAM,CAAAY,WAAW,CAAGZ,KAAK,CAAGC,aAAa,CAEzC,mBACEL,KAAA,QAAKiB,SAAS,CAAC,MAAM,CAAAC,QAAA,eACnBpB,IAAA,OAAAoB,QAAA,CAAKf,KAAK,CAAK,CAAC,cAChBH,KAAA,MAAGiB,SAAS,CAAC,OAAO,CAAAC,QAAA,EACjBZ,YAAY,CAAC,OACd,cAAAR,IAAA,SAAMmB,SAAS,CAAE,SAASD,WAAW,CAAG,IAAI,CAAG,MAAM,EAAG,CAAAE,QAAA,CACrDF,WAAW,CAAG,GAAG,CAAG,GAAG,CACpB,CAAC,EACN,CAAC,EACD,CAAC,CAEV,CAAC,CAED,cAAe,CAAAf,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}