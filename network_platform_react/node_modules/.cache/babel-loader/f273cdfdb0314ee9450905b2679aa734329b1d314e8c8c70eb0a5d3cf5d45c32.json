{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fabri\\\\Envs\\\\npip\\\\NPIP_Frontend\\\\network-performance-platform\\\\src\\\\Components\\\\LineChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LineChart = () => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  useEffect(() => {\n    // Simulate API call\n    const fetchData = async () => {\n      const dataFromAPI = {\n        labels: ['January', 'February', 'March', 'April', 'May', 'June'],\n        datasets: [{\n          label: 'Average Latency',\n          data: [65, 59, 80, 81, 56, 55],\n          fill: false,\n          backgroundColor: 'rgba(75,192,192,0.2)',\n          borderColor: 'rgba(75,192,192,1)'\n        }]\n      };\n      setChartData(dataFromAPI);\n    };\n    fetchData();\n  }, []);\n  if (!chartData) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading chart...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 26\n  }, this);\n  const options = {\n    scales: {\n      y: {\n        beginAtZero: true\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Line, {\n    data: chartData,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 10\n  }, this);\n};\n_s(LineChart, \"9euvDhZ+n6eLTlbzwvHmNPhoqAw=\");\n_c = LineChart;\nexport default LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useEffect","useState","Line","jsxDEV","_jsxDEV","LineChart","_s","chartData","setChartData","fetchData","dataFromAPI","labels","datasets","label","data","fill","backgroundColor","borderColor","children","fileName","_jsxFileName","lineNumber","columnNumber","options","scales","y","beginAtZero","_c","$RefreshReg$"],"sources":["C:/Users/fabri/Envs/npip/NPIP_Frontend/network-performance-platform/src/Components/LineChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst LineChart = () => {\r\n  const [chartData, setChartData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Simulate API call\r\n    const fetchData = async () => {\r\n      const dataFromAPI = {\r\n        labels: ['January', 'February', 'March', 'April', 'May', 'June'],\r\n        datasets: [\r\n          {\r\n            label: 'Average Latency',\r\n            data: [65, 59, 80, 81, 56, 55],\r\n            fill: false,\r\n            backgroundColor: 'rgba(75,192,192,0.2)',\r\n            borderColor: 'rgba(75,192,192,1)',\r\n          },\r\n        ],\r\n      };\r\n      setChartData(dataFromAPI);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (!chartData) return <p>Loading chart...</p>;\r\n\r\n  const options = {\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n      },\r\n    },\r\n  };\r\n\r\n  return <Line data={chartData} options={options} />;\r\n};\r\n\r\nexport default LineChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,WAAW,GAAG;QAClBC,MAAM,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,CAAC;QAChEC,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,iBAAiB;UACxBC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;UAC9BC,IAAI,EAAE,KAAK;UACXC,eAAe,EAAE,sBAAsB;UACvCC,WAAW,EAAE;QACf,CAAC;MAEL,CAAC;MACDT,YAAY,CAACE,WAAW,CAAC;IAC3B,CAAC;IACDD,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACF,SAAS,EAAE,oBAAOH,OAAA;IAAAc,QAAA,EAAG;EAAgB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAE9C,MAAMC,OAAO,GAAG;IACdC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,WAAW,EAAE;MACf;IACF;EACF,CAAC;EAED,oBAAOtB,OAAA,CAACF,IAAI;IAACY,IAAI,EAAEP,SAAU;IAACgB,OAAO,EAAEA;EAAQ;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACpD,CAAC;AAAChB,EAAA,CAlCID,SAAS;AAAAsB,EAAA,GAATtB,SAAS;AAoCf,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}