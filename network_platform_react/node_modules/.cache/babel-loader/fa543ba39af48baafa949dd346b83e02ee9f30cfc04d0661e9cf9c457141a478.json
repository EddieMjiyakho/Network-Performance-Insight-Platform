{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fabri\\\\Envs\\\\npip\\\\network_platform_react\\\\src\\\\Components\\\\HistoricalPerformanceAnalysis.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReportForm from './ReportForm';\nimport ReportPreview from './ReportPreview';\nimport ExportButtons from './ExportButtons';\nimport ReportPresetOptions from './ReportPresetOptions';\nimport '../Styling/HistoricalPerformanceAnalysis.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HistoricalPerformanceAnalysis = () => {\n  _s();\n  const [reportData, setReportData] = useState(null);\n  const [presetReport, setPresetReport] = useState(null);\n\n  // Mock function to simulate fetching report data\n  const fetchReportData = filters => {\n    // Simulate data fetching based on the filters\n    return [{\n      isp: 'Safaricom',\n      latency: 50,\n      downloadSpeed: 20,\n      uploadSpeed: 5,\n      packetLoss: 1\n    }, {\n      isp: 'MTN',\n      latency: 40,\n      downloadSpeed: 25,\n      uploadSpeed: 10,\n      packetLoss: 0.5\n    }, {\n      isp: 'Vodacom',\n      latency: 60,\n      downloadSpeed: 15,\n      uploadSpeed: 7,\n      packetLoss: 2\n    }];\n  };\n\n  // Mock function to simulate fetching preset report data\n  const fetchPresetReport = preset => {\n    // Simulate preset report data based on the selected preset\n    if (preset === 'monthlyISP') {\n      return [{\n        isp: 'Safaricom',\n        latency: 52,\n        downloadSpeed: 22,\n        uploadSpeed: 6,\n        packetLoss: 1.2\n      }, {\n        isp: 'MTN',\n        latency: 42,\n        downloadSpeed: 26,\n        uploadSpeed: 11,\n        packetLoss: 0.6\n      }, {\n        isp: 'Vodacom',\n        latency: 62,\n        downloadSpeed: 16,\n        uploadSpeed: 8,\n        packetLoss: 2.1\n      }];\n    }\n    // Add other preset data as needed\n    return [];\n  };\n  const handleGenerateReport = filters => {\n    const data = fetchReportData(filters);\n    setReportData(data);\n  };\n  const handleSelectPreset = preset => {\n    const data = fetchPresetReport(preset);\n    setReportData(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"historical-performance-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Historical Performance Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReportForm, {\n      onGenerate: handleGenerateReport\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReportPreview, {\n      data: reportData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), reportData && /*#__PURE__*/_jsxDEV(ExportButtons, {\n      data: reportData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(HistoricalPerformanceAnalysis, \"wQKrWK94pxxX17bR952rRlbIGsQ=\");\n_c = HistoricalPerformanceAnalysis;\nexport default HistoricalPerformanceAnalysis;\nvar _c;\n$RefreshReg$(_c, \"HistoricalPerformanceAnalysis\");","map":{"version":3,"names":["React","useState","ReportForm","ReportPreview","ExportButtons","ReportPresetOptions","jsxDEV","_jsxDEV","HistoricalPerformanceAnalysis","_s","reportData","setReportData","presetReport","setPresetReport","fetchReportData","filters","isp","latency","downloadSpeed","uploadSpeed","packetLoss","fetchPresetReport","preset","handleGenerateReport","data","handleSelectPreset","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onGenerate","_c","$RefreshReg$"],"sources":["C:/Users/fabri/Envs/npip/network_platform_react/src/Components/HistoricalPerformanceAnalysis.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ReportForm from './ReportForm';\r\nimport ReportPreview from './ReportPreview';\r\nimport ExportButtons from './ExportButtons';\r\nimport ReportPresetOptions from './ReportPresetOptions';\r\nimport '../Styling/HistoricalPerformanceAnalysis.css';\r\n\r\nconst HistoricalPerformanceAnalysis = () => {\r\n  const [reportData, setReportData] = useState(null);\r\n  const [presetReport, setPresetReport] = useState(null);\r\n\r\n  // Mock function to simulate fetching report data\r\n  const fetchReportData = (filters) => {\r\n    // Simulate data fetching based on the filters\r\n    return [\r\n      { isp: 'Safaricom', latency: 50, downloadSpeed: 20, uploadSpeed: 5, packetLoss: 1 },\r\n      { isp: 'MTN', latency: 40, downloadSpeed: 25, uploadSpeed: 10, packetLoss: 0.5 },\r\n      { isp: 'Vodacom', latency: 60, downloadSpeed: 15, uploadSpeed: 7, packetLoss: 2 },\r\n    ];\r\n  };\r\n\r\n  // Mock function to simulate fetching preset report data\r\n  const fetchPresetReport = (preset) => {\r\n    // Simulate preset report data based on the selected preset\r\n    if (preset === 'monthlyISP') {\r\n      return [\r\n        { isp: 'Safaricom', latency: 52, downloadSpeed: 22, uploadSpeed: 6, packetLoss: 1.2 },\r\n        { isp: 'MTN', latency: 42, downloadSpeed: 26, uploadSpeed: 11, packetLoss: 0.6 },\r\n        { isp: 'Vodacom', latency: 62, downloadSpeed: 16, uploadSpeed: 8, packetLoss: 2.1 },\r\n      ];\r\n    }\r\n    // Add other preset data as needed\r\n    return [];\r\n  };\r\n\r\n  const handleGenerateReport = (filters) => {\r\n    const data = fetchReportData(filters);\r\n    setReportData(data);\r\n  };\r\n\r\n  const handleSelectPreset = (preset) => {\r\n    const data = fetchPresetReport(preset);\r\n    setReportData(data);\r\n  };\r\n\r\n  return (\r\n    <div className=\"historical-performance-container\">\r\n      <h1>Historical Performance Analysis</h1>\r\n      {/* <ReportPresetOptions onSelectPreset={handleSelectPreset} /> */}\r\n      <ReportForm onGenerate={handleGenerateReport} />\r\n      <ReportPreview data={reportData} />\r\n      {reportData && <ExportButtons data={reportData} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HistoricalPerformanceAnalysis;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}