{"ast":null,"code":"import React from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ExportButtons=_ref=>{let{data}=_ref;const handleExportPDF=()=>{// Logic to export data as PDF\nconsole.log('Exporting data as PDF...');};const handleExportCSV=()=>{// Logic to export data as CSV\nconsole.log('Exporting data as CSV...');};return/*#__PURE__*/_jsxs(\"div\",{className:\"export-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleExportPDF,children:\"Export as PDF\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleExportCSV,children:\"Export as CSV\"})]});};export default ExportButtons;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","ExportButtons","_ref","data","handleExportPDF","console","log","handleExportCSV","className","children","onClick"],"sources":["C:/Users/fabri/Envs/npip/network_platform_react/src/Components/ExportButtons.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst ExportButtons = ({ data }) => {\r\n  const handleExportPDF = () => {\r\n    // Logic to export data as PDF\r\n    console.log('Exporting data as PDF...');\r\n  };\r\n\r\n  const handleExportCSV = () => {\r\n    // Logic to export data as CSV\r\n    console.log('Exporting data as CSV...');\r\n  };\r\n\r\n  return (\r\n    <div className=\"export-buttons\">\r\n      <button onClick={handleExportPDF}>Export as PDF</button>\r\n      <button onClick={handleExportCSV}>Export as CSV</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExportButtons;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,KAAM,CAAAC,aAAa,CAAGC,IAAA,EAAc,IAAb,CAAEC,IAAK,CAAC,CAAAD,IAAA,CAC7B,KAAM,CAAAE,eAAe,CAAGA,CAAA,GAAM,CAC5B;AACAC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC,CACzC,CAAC,CAED,KAAM,CAAAC,eAAe,CAAGA,CAAA,GAAM,CAC5B;AACAF,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC,CACzC,CAAC,CAED,mBACEN,KAAA,QAAKQ,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BX,IAAA,WAAQY,OAAO,CAAEN,eAAgB,CAAAK,QAAA,CAAC,eAAa,CAAQ,CAAC,cACxDX,IAAA,WAAQY,OAAO,CAAEH,eAAgB,CAAAE,QAAA,CAAC,eAAa,CAAQ,CAAC,EACrD,CAAC,CAEV,CAAC,CAED,cAAe,CAAAR,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}