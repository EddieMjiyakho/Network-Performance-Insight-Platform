{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fabri\\\\Envs\\\\npip\\\\NPIP_Frontend\\\\network-performance-platform\\\\src\\\\Components\\\\Table.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Table = ({\n  data,\n  onSort,\n  sortColumn,\n  sortOrder\n}) => {\n  const renderSortArrow = column => {\n    if (column === sortColumn) {\n      return sortOrder === 'asc' ? '▲' : '▼';\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"isp-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => onSort('name'),\n          children: [\"ISP Name \", renderSortArrow('name')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => onSort('latency'),\n          children: [\"Latency \", renderSortArrow('latency')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => onSort('downloadSpeed'),\n          children: [\"Download Speed \", renderSortArrow('downloadSpeed')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => onSort('uploadSpeed'),\n          children: [\"Upload Speed \", renderSortArrow('uploadSpeed')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => onSort('packetLoss'),\n          children: [\"Packet Loss \", renderSortArrow('packetLoss')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: data.map((isp, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: index < 3 ? 'top-isp' : '',\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: isp.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [isp.latency, \" ms\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [isp.downloadSpeed, \" Mbps\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [isp.uploadSpeed, \" Mbps\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [isp.packetLoss, \" %\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Table","data","onSort","sortColumn","sortOrder","renderSortArrow","column","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","isp","index","name","latency","downloadSpeed","uploadSpeed","packetLoss","_c","$RefreshReg$"],"sources":["C:/Users/fabri/Envs/npip/NPIP_Frontend/network-performance-platform/src/Components/Table.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst Table = ({ data, onSort, sortColumn, sortOrder }) => {\r\n  const renderSortArrow = (column) => {\r\n    if (column === sortColumn) {\r\n      return sortOrder === 'asc' ? '▲' : '▼';\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <table className=\"isp-table\">\r\n      <thead>\r\n        <tr>\r\n          <th onClick={() => onSort('name')}>ISP Name {renderSortArrow('name')}</th>\r\n          <th onClick={() => onSort('latency')}>Latency {renderSortArrow('latency')}</th>\r\n          <th onClick={() => onSort('downloadSpeed')}>Download Speed {renderSortArrow('downloadSpeed')}</th>\r\n          <th onClick={() => onSort('uploadSpeed')}>Upload Speed {renderSortArrow('uploadSpeed')}</th>\r\n          <th onClick={() => onSort('packetLoss')}>Packet Loss {renderSortArrow('packetLoss')}</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {data.map((isp, index) => (\r\n          <tr key={index} className={index < 3 ? 'top-isp' : ''}>\r\n            <td>{isp.name}</td>\r\n            <td>{isp.latency} ms</td>\r\n            <td>{isp.downloadSpeed} Mbps</td>\r\n            <td>{isp.uploadSpeed} Mbps</td>\r\n            <td>{isp.packetLoss} %</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}