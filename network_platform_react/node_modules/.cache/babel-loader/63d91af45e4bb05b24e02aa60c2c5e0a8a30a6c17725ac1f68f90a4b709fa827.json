{"ast":null,"code":"import React,{useState}from'react';import ReportForm from'./ReportForm';import ReportPreview from'./ReportPreview';import ExportButtons from'./ExportButtons';import ReportPresetOptions from'./ReportPresetOptions';import'../Styling/HistoricalPerformanceAnalysis.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const HistoricalPerformanceAnalysis=()=>{const[reportData,setReportData]=useState(null);const[presetReport,setPresetReport]=useState(null);// Mock function to simulate fetching report data\nconst fetchReportData=filters=>{// Simulate data fetching based on the filters\nreturn[{isp:'Safaricom',latency:50,downloadSpeed:20,uploadSpeed:5,packetLoss:1},{isp:'MTN',latency:40,downloadSpeed:25,uploadSpeed:10,packetLoss:0.5},{isp:'Vodacom',latency:60,downloadSpeed:15,uploadSpeed:7,packetLoss:2}];};// Mock function to simulate fetching preset report data\nconst fetchPresetReport=preset=>{// Simulate preset report data based on the selected preset\nif(preset==='monthlyISP'){return[{isp:'Safaricom',latency:52,downloadSpeed:22,uploadSpeed:6,packetLoss:1.2},{isp:'MTN',latency:42,downloadSpeed:26,uploadSpeed:11,packetLoss:0.6},{isp:'Vodacom',latency:62,downloadSpeed:16,uploadSpeed:8,packetLoss:2.1}];}// Add other preset data as needed\nreturn[];};const handleGenerateReport=filters=>{const data=fetchReportData(filters);setReportData(data);};const handleSelectPreset=preset=>{const data=fetchPresetReport(preset);setReportData(data);};return/*#__PURE__*/_jsxs(\"div\",{className:\"historical-performance-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Historical Performance Analysis\"}),/*#__PURE__*/_jsx(ReportForm,{onGenerate:handleGenerateReport}),/*#__PURE__*/_jsx(ReportPreview,{data:reportData}),reportData&&/*#__PURE__*/_jsx(ExportButtons,{data:reportData})]});};export default HistoricalPerformanceAnalysis;","map":{"version":3,"names":["React","useState","ReportForm","ReportPreview","ExportButtons","ReportPresetOptions","jsx","_jsx","jsxs","_jsxs","HistoricalPerformanceAnalysis","reportData","setReportData","presetReport","setPresetReport","fetchReportData","filters","isp","latency","downloadSpeed","uploadSpeed","packetLoss","fetchPresetReport","preset","handleGenerateReport","data","handleSelectPreset","className","children","onGenerate"],"sources":["C:/Users/fabri/Envs/npip/network_platform_react/src/Components/HistoricalPerformanceAnalysis.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ReportForm from './ReportForm';\r\nimport ReportPreview from './ReportPreview';\r\nimport ExportButtons from './ExportButtons';\r\nimport ReportPresetOptions from './ReportPresetOptions';\r\nimport '../Styling/HistoricalPerformanceAnalysis.css';\r\n\r\nconst HistoricalPerformanceAnalysis = () => {\r\n  const [reportData, setReportData] = useState(null);\r\n  const [presetReport, setPresetReport] = useState(null);\r\n\r\n  // Mock function to simulate fetching report data\r\n  const fetchReportData = (filters) => {\r\n    // Simulate data fetching based on the filters\r\n    return [\r\n      { isp: 'Safaricom', latency: 50, downloadSpeed: 20, uploadSpeed: 5, packetLoss: 1 },\r\n      { isp: 'MTN', latency: 40, downloadSpeed: 25, uploadSpeed: 10, packetLoss: 0.5 },\r\n      { isp: 'Vodacom', latency: 60, downloadSpeed: 15, uploadSpeed: 7, packetLoss: 2 },\r\n    ];\r\n  };\r\n\r\n  // Mock function to simulate fetching preset report data\r\n  const fetchPresetReport = (preset) => {\r\n    // Simulate preset report data based on the selected preset\r\n    if (preset === 'monthlyISP') {\r\n      return [\r\n        { isp: 'Safaricom', latency: 52, downloadSpeed: 22, uploadSpeed: 6, packetLoss: 1.2 },\r\n        { isp: 'MTN', latency: 42, downloadSpeed: 26, uploadSpeed: 11, packetLoss: 0.6 },\r\n        { isp: 'Vodacom', latency: 62, downloadSpeed: 16, uploadSpeed: 8, packetLoss: 2.1 },\r\n      ];\r\n    }\r\n    // Add other preset data as needed\r\n    return [];\r\n  };\r\n\r\n  const handleGenerateReport = (filters) => {\r\n    const data = fetchReportData(filters);\r\n    setReportData(data);\r\n  };\r\n\r\n  const handleSelectPreset = (preset) => {\r\n    const data = fetchPresetReport(preset);\r\n    setReportData(data);\r\n  };\r\n\r\n  return (\r\n    <div className=\"historical-performance-container\">\r\n      <h1>Historical Performance Analysis</h1>\r\n      {/* <ReportPresetOptions onSelectPreset={handleSelectPreset} /> */}\r\n      <ReportForm onGenerate={handleGenerateReport} />\r\n      <ReportPreview data={reportData} />\r\n      {reportData && <ExportButtons data={reportData} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HistoricalPerformanceAnalysis;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,UAAU,KAAM,cAAc,CACrC,MAAO,CAAAC,aAAa,KAAM,iBAAiB,CAC3C,MAAO,CAAAC,aAAa,KAAM,iBAAiB,CAC3C,MAAO,CAAAC,mBAAmB,KAAM,uBAAuB,CACvD,MAAO,8CAA8C,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEtD,KAAM,CAAAC,6BAA6B,CAAGA,CAAA,GAAM,CAC1C,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CAClD,KAAM,CAACY,YAAY,CAAEC,eAAe,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CAEtD;AACA,KAAM,CAAAc,eAAe,CAAIC,OAAO,EAAK,CACnC;AACA,MAAO,CACL,CAAEC,GAAG,CAAE,WAAW,CAAEC,OAAO,CAAE,EAAE,CAAEC,aAAa,CAAE,EAAE,CAAEC,WAAW,CAAE,CAAC,CAAEC,UAAU,CAAE,CAAE,CAAC,CACnF,CAAEJ,GAAG,CAAE,KAAK,CAAEC,OAAO,CAAE,EAAE,CAAEC,aAAa,CAAE,EAAE,CAAEC,WAAW,CAAE,EAAE,CAAEC,UAAU,CAAE,GAAI,CAAC,CAChF,CAAEJ,GAAG,CAAE,SAAS,CAAEC,OAAO,CAAE,EAAE,CAAEC,aAAa,CAAE,EAAE,CAAEC,WAAW,CAAE,CAAC,CAAEC,UAAU,CAAE,CAAE,CAAC,CAClF,CACH,CAAC,CAED;AACA,KAAM,CAAAC,iBAAiB,CAAIC,MAAM,EAAK,CACpC;AACA,GAAIA,MAAM,GAAK,YAAY,CAAE,CAC3B,MAAO,CACL,CAAEN,GAAG,CAAE,WAAW,CAAEC,OAAO,CAAE,EAAE,CAAEC,aAAa,CAAE,EAAE,CAAEC,WAAW,CAAE,CAAC,CAAEC,UAAU,CAAE,GAAI,CAAC,CACrF,CAAEJ,GAAG,CAAE,KAAK,CAAEC,OAAO,CAAE,EAAE,CAAEC,aAAa,CAAE,EAAE,CAAEC,WAAW,CAAE,EAAE,CAAEC,UAAU,CAAE,GAAI,CAAC,CAChF,CAAEJ,GAAG,CAAE,SAAS,CAAEC,OAAO,CAAE,EAAE,CAAEC,aAAa,CAAE,EAAE,CAAEC,WAAW,CAAE,CAAC,CAAEC,UAAU,CAAE,GAAI,CAAC,CACpF,CACH,CACA;AACA,MAAO,EAAE,CACX,CAAC,CAED,KAAM,CAAAG,oBAAoB,CAAIR,OAAO,EAAK,CACxC,KAAM,CAAAS,IAAI,CAAGV,eAAe,CAACC,OAAO,CAAC,CACrCJ,aAAa,CAACa,IAAI,CAAC,CACrB,CAAC,CAED,KAAM,CAAAC,kBAAkB,CAAIH,MAAM,EAAK,CACrC,KAAM,CAAAE,IAAI,CAAGH,iBAAiB,CAACC,MAAM,CAAC,CACtCX,aAAa,CAACa,IAAI,CAAC,CACrB,CAAC,CAED,mBACEhB,KAAA,QAAKkB,SAAS,CAAC,kCAAkC,CAAAC,QAAA,eAC/CrB,IAAA,OAAAqB,QAAA,CAAI,iCAA+B,CAAI,CAAC,cAExCrB,IAAA,CAACL,UAAU,EAAC2B,UAAU,CAAEL,oBAAqB,CAAE,CAAC,cAChDjB,IAAA,CAACJ,aAAa,EAACsB,IAAI,CAAEd,UAAW,CAAE,CAAC,CAClCA,UAAU,eAAIJ,IAAA,CAACH,aAAa,EAACqB,IAAI,CAAEd,UAAW,CAAE,CAAC,EAC/C,CAAC,CAEV,CAAC,CAED,cAAe,CAAAD,6BAA6B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}