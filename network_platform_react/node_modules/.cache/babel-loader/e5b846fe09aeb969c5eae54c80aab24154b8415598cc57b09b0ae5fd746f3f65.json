{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fabri\\\\Envs\\\\npip\\\\NPIP_Frontend\\\\network-performance-platform\\\\src\\\\Components\\\\Heatmap.js\",\n  _s = $RefreshSig$();\n// src/Heatmap.js\nimport React, { useRef, useEffect } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet.heat/dist/leaflet-heat.js';\nimport '../Styling/Heatmap.css'; // Ensure this CSS file is included for any custom styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Heatmap = () => {\n  _s();\n  const mapRef = useRef(null);\n  useEffect(() => {\n    // Ensure the map is initialized only once\n    if (!mapRef.current._leaflet_id) {\n      // Initialize the map\n      const map = L.map(mapRef.current, {\n        center: [9.0820, 8.6753],\n        // Center the map on Africa\n        zoom: 3 // Set initial zoom level\n      });\n\n      // Add tile layer for map background\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      }).addTo(map);\n\n      // Fetch and add GeoJSON data for countries\n      fetch('https://raw.githubusercontent.com/datasets/geo-countries/master/data/countries.geojson').then(response => response.json()).then(geoData => {\n        L.geoJSON(geoData, {\n          onEachFeature: (feature, layer) => {\n            // Add a click event to each country\n            layer.on('click', e => {\n              const countryName = feature.properties.ADMIN; // Assuming 'ADMIN' is the country name\n              const {\n                lat,\n                lng\n              } = e.latlng;\n\n              // Show a popup with country name and coordinates\n              L.popup().setLatLng([lat, lng]).setContent(`<strong>${countryName}</strong><br>Coordinates: ${lat.toFixed(2)}, ${lng.toFixed(2)}`).openOn(map);\n            });\n          },\n          style: {\n            color: '#3388ff',\n            // Boundary color\n            weight: 2,\n            fillOpacity: 0.1\n          }\n        }).addTo(map);\n      });\n\n      // Heatmap data example\n      const heatData = [[9.0820, 8.6753, 0.5],\n      // Example points\n      [10.7749, 7.4194, 0.7], [8.7949, 9.4294, 0.6]];\n\n      // Add heatmap layer\n      L.heatLayer(heatData, {\n        radius: 25\n      }).addTo(map);\n\n      // Add map legend for heat intensity\n      const legend = L.control({\n        position: 'bottomright'\n      });\n      legend.onAdd = function () {\n        // Create a div element for the legend\n        const div = L.DomUtil.create('div', 'info legend');\n        const grades = [0, 0.1, 0.2, 0.3, 0.4, 0.5]; // Define intensity levels\n        const colors = ['#0000ff', '#00ffff', '#00ff00', '#ffff00', '#ff8000', '#ff0000']; // Colors from blue to red\n\n        div.innerHTML += '<strong>Heat Intensity</strong><br>';\n\n        // Loop through the grades and create colored squares and labels\n        for (let i = 0; i < grades.length; i++) {\n          div.innerHTML += `<i style=\"background:${colors[i]}; width: 18px; height: 18px; display:inline-block;\"></i> ` + grades[i] + (grades[i + 1] ? '&ndash;' + grades[i + 1] + '<br>' : '+');\n        }\n        return div;\n      };\n      legend.addTo(map);\n\n      // Cleanup function to properly remove the map when the component unmounts\n      return () => {\n        if (map) {\n          map.remove();\n        }\n      };\n    }\n  }, []);\n\n  // Return the map container with specific dimensions\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapRef,\n    style: {\n      height: '500px',\n      width: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 10\n  }, this);\n};\n_s(Heatmap, \"9mn7MMe4fPaZ50ApsOpRWF2HbFg=\");\n_c = Heatmap;\nexport default Heatmap;\nvar _c;\n$RefreshReg$(_c, \"Heatmap\");","map":{"version":3,"names":["React","useRef","useEffect","L","jsxDEV","_jsxDEV","Heatmap","_s","mapRef","current","_leaflet_id","map","center","zoom","tileLayer","attribution","addTo","fetch","then","response","json","geoData","geoJSON","onEachFeature","feature","layer","on","e","countryName","properties","ADMIN","lat","lng","latlng","popup","setLatLng","setContent","toFixed","openOn","style","color","weight","fillOpacity","heatData","heatLayer","radius","legend","control","position","onAdd","div","DomUtil","create","grades","colors","innerHTML","i","length","remove","ref","height","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/fabri/Envs/npip/NPIP_Frontend/network-performance-platform/src/Components/Heatmap.js"],"sourcesContent":["// src/Heatmap.js\r\nimport React, { useRef, useEffect } from 'react';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport 'leaflet.heat/dist/leaflet-heat.js';\r\nimport '../Styling/Heatmap.css'; // Ensure this CSS file is included for any custom styles\r\n\r\nconst Heatmap = () => {\r\n  const mapRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Ensure the map is initialized only once\r\n    if (!mapRef.current._leaflet_id) {\r\n      // Initialize the map\r\n      const map = L.map(mapRef.current, {\r\n        center: [9.0820, 8.6753], // Center the map on Africa\r\n        zoom: 3, // Set initial zoom level\r\n      });\r\n\r\n      // Add tile layer for map background\r\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\r\n      }).addTo(map);\r\n\r\n      // Fetch and add GeoJSON data for countries\r\n      fetch('https://raw.githubusercontent.com/datasets/geo-countries/master/data/countries.geojson')\r\n        .then(response => response.json())\r\n        .then(geoData => {\r\n          L.geoJSON(geoData, {\r\n            onEachFeature: (feature, layer) => {\r\n              // Add a click event to each country\r\n              layer.on('click', (e) => {\r\n                const countryName = feature.properties.ADMIN; // Assuming 'ADMIN' is the country name\r\n                const { lat, lng } = e.latlng;\r\n\r\n                // Show a popup with country name and coordinates\r\n                L.popup()\r\n                  .setLatLng([lat, lng])\r\n                  .setContent(`<strong>${countryName}</strong><br>Coordinates: ${lat.toFixed(2)}, ${lng.toFixed(2)}`)\r\n                  .openOn(map);\r\n              });\r\n            },\r\n            style: {\r\n              color: '#3388ff', // Boundary color\r\n              weight: 2,\r\n              fillOpacity: 0.1\r\n            }\r\n          }).addTo(map);\r\n        });\r\n\r\n      // Heatmap data example\r\n      const heatData = [\r\n        [9.0820, 8.6753, 0.5],  // Example points\r\n        [10.7749, 7.4194, 0.7],\r\n        [8.7949, 9.4294, 0.6]\r\n      ];\r\n\r\n      // Add heatmap layer\r\n      L.heatLayer(heatData, { radius: 25 }).addTo(map);\r\n\r\n      // Add map legend for heat intensity\r\n      const legend = L.control({ position: 'bottomright' });\r\n\r\n      legend.onAdd = function () {\r\n        // Create a div element for the legend\r\n        const div = L.DomUtil.create('div', 'info legend');\r\n        const grades = [0, 0.1, 0.2, 0.3, 0.4, 0.5]; // Define intensity levels\r\n        const colors = ['#0000ff', '#00ffff', '#00ff00', '#ffff00', '#ff8000', '#ff0000']; // Colors from blue to red\r\n\r\n        div.innerHTML += '<strong>Heat Intensity</strong><br>';\r\n\r\n        // Loop through the grades and create colored squares and labels\r\n        for (let i = 0; i < grades.length; i++) {\r\n          div.innerHTML +=\r\n            `<i style=\"background:${colors[i]}; width: 18px; height: 18px; display:inline-block;\"></i> ` +\r\n            grades[i] + (grades[i + 1] ? '&ndash;' + grades[i + 1] + '<br>' : '+');\r\n        }\r\n\r\n        return div;\r\n      };\r\n\r\n      legend.addTo(map);\r\n\r\n      // Cleanup function to properly remove the map when the component unmounts\r\n      return () => {\r\n        if (map) {\r\n          map.remove();\r\n        }\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  // Return the map container with specific dimensions\r\n  return <div ref={mapRef} style={{ height: '500px', width: '100%' }} />;\r\n};\r\n\r\nexport default Heatmap;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}