{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fabri\\\\Envs\\\\npip\\\\network_platform_react\\\\src\\\\Components\\\\MetricCard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './MetricCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MetricCard = ({\n  title,\n  value,\n  previousValue\n}) => {\n  _s();\n  const [animateValue, setAnimateValue] = useState(0);\n\n  // Trigger number animation when the card loads\n  useEffect(() => {\n    let start = 0;\n    const duration = 1000; // 1 second for the animation\n    const increment = value / (duration / 10);\n    const interval = setInterval(() => {\n      start += increment;\n      if (start >= value) {\n        setAnimateValue(value);\n        clearInterval(interval);\n      } else {\n        setAnimateValue(Math.floor(start));\n      }\n    }, 10);\n    return () => clearInterval(interval);\n  }, [value]);\n\n  // Check if the value has increased or decreased\n  const isIncreased = value > previousValue;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"value\",\n      children: [animateValue, \" Mbps\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `arrow ${isIncreased ? 'up' : 'down'}`,\n        children: isIncreased ? '↑' : '↓'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(MetricCard, \"ZU58p2qZZOD7trFhSMCZGWqGHp4=\");\n_c = MetricCard;\nexport default MetricCard;\nvar _c;\n$RefreshReg$(_c, \"MetricCard\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","MetricCard","title","value","previousValue","_s","animateValue","setAnimateValue","start","duration","increment","interval","setInterval","clearInterval","Math","floor","isIncreased","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/fabri/Envs/npip/network_platform_react/src/Components/MetricCard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './MetricCard.css';\r\n\r\nconst MetricCard = ({ title, value, previousValue }) => {\r\n  const [animateValue, setAnimateValue] = useState(0);\r\n\r\n  // Trigger number animation when the card loads\r\n  useEffect(() => {\r\n    let start = 0;\r\n    const duration = 1000; // 1 second for the animation\r\n    const increment = value / (duration / 10);\r\n\r\n    const interval = setInterval(() => {\r\n      start += increment;\r\n      if (start >= value) {\r\n        setAnimateValue(value);\r\n        clearInterval(interval);\r\n      } else {\r\n        setAnimateValue(Math.floor(start));\r\n      }\r\n    }, 10);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [value]);\r\n\r\n  // Check if the value has increased or decreased\r\n  const isIncreased = value > previousValue;\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <h3>{title}</h3>\r\n      <p className=\"value\">\r\n        {animateValue} Mbps\r\n        <span className={`arrow ${isIncreased ? 'up' : 'down'}`}>\r\n          {isIncreased ? '↑' : '↓'}\r\n        </span>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MetricCard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC,KAAK;EAAEC,KAAK;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACtD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;;EAEnD;EACAD,SAAS,CAAC,MAAM;IACd,IAAIW,KAAK,GAAG,CAAC;IACb,MAAMC,QAAQ,GAAG,IAAI,CAAC,CAAC;IACvB,MAAMC,SAAS,GAAGP,KAAK,IAAIM,QAAQ,GAAG,EAAE,CAAC;IAEzC,MAAME,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCJ,KAAK,IAAIE,SAAS;MAClB,IAAIF,KAAK,IAAIL,KAAK,EAAE;QAClBI,eAAe,CAACJ,KAAK,CAAC;QACtBU,aAAa,CAACF,QAAQ,CAAC;MACzB,CAAC,MAAM;QACLJ,eAAe,CAACO,IAAI,CAACC,KAAK,CAACP,KAAK,CAAC,CAAC;MACpC;IACF,CAAC,EAAE,EAAE,CAAC;IAEN,OAAO,MAAMK,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACR,KAAK,CAAC,CAAC;;EAEX;EACA,MAAMa,WAAW,GAAGb,KAAK,GAAGC,aAAa;EAEzC,oBACEJ,OAAA;IAAKiB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBlB,OAAA;MAAAkB,QAAA,EAAKhB;IAAK;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChBtB,OAAA;MAAGiB,SAAS,EAAC,OAAO;MAAAC,QAAA,GACjBZ,YAAY,EAAC,OACd,eAAAN,OAAA;QAAMiB,SAAS,EAAE,SAASD,WAAW,GAAG,IAAI,GAAG,MAAM,EAAG;QAAAE,QAAA,EACrDF,WAAW,GAAG,GAAG,GAAG;MAAG;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;AAACjB,EAAA,CApCIJ,UAAU;AAAAsB,EAAA,GAAVtB,UAAU;AAsChB,eAAeA,UAAU;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}